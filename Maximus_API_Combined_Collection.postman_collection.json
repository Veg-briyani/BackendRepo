{
  "info": {
    "name": "Maximus API - Complete Collection",
    "description": "Complete API collection for Maximus Backend combining Admin, Books, Authentication, Notifications, Orders, and Royalties endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Auth related endpoints",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"Password123!\",\n    \"phoneNumber\": \"+919876543210\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Authenticate user and get JWT token"
          }
        },
        {
          "name": "Google Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"credential\": \"GOOGLE_ID_TOKEN\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/google-login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "google-login"]
            },
            "description": "Login with Google OAuth credential"
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"testuser@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password"]
            },
            "description": "Request password reset email"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"token\": \"RESET_TOKEN\",\n    \"password\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            },
            "description": "Reset password with token from email"
          }
        },
        {
          "name": "Request OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phoneNumber\": \"+919876543210\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/request-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "request-otp"]
            },
            "description": "Request OTP for phone verification"
          }
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phoneNumber\": \"+919876543210\",\n    \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-otp"]
            },
            "description": "Verify OTP code sent to phone"
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get current user profile"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Name\",\n    \"phoneNumber\": \"+919876543210\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Update user profile"
          }
        }
      ]
    },
    {
      "name": "Admin - User Management",
      "description": "User management endpoints for admins",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            },
            "description": "Get all users (admin only)"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "USER_ID_HERE"
                }
              ]
            },
            "description": "Get specific user by ID (admin only)"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated User Name\",\n    \"email\": \"updated@example.com\",\n    \"phoneNumber\": \"+919876543210\",\n    \"role\": \"author\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "USER_ID_HERE"
                }
              ]
            },
            "description": "Update user (admin only)"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "USER_ID_HERE"
                }
              ]
            },
            "description": "Delete user and associated books (admin only)"
          }
        },
        {
          "name": "Update User Revenue",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"monthlyRevenue\": 50000,\n    \"yearlyPerformance\": {\n        \"2023\": {\n            \"january\": 5000,\n            \"february\": 6000,\n            \"march\": 7000\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id/revenue",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", ":id", "revenue"],
              "variable": [
                {
                  "key": "id",
                  "value": "USER_ID_HERE"
                }
              ]
            },
            "description": "Update user revenue data (admin only)"
          }
        },
        {
          "name": "Update Monthly Revenue",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 7500\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:userId/yearlyPerformance/:year/monthlyRevenue/:month",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users", ":userId", "yearlyPerformance", ":year", "monthlyRevenue", ":month"],
              "variable": [
                {
                  "key": "userId",
                  "value": "USER_ID_HERE"
                },
                {
                  "key": "year",
                  "value": "2023"
                },
                {
                  "key": "month",
                  "value": "april"
                }
              ]
            },
            "description": "Update specific month revenue for user (admin only)"
          }
        }
      ]
    },
    {
      "name": "Admin - KYC Management",
      "description": "KYC management endpoints for admins",
      "item": [
        {
          "name": "Get Pending KYCs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/kyc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "kyc"]
            },
            "description": "Get all pending KYC verification requests (admin only)"
          }
        },
        {
          "name": "Approve KYC",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/kyc/:id/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "kyc", ":id", "approve"],
              "variable": [
                {
                  "key": "id",
                  "value": "KYC_ID_HERE"
                }
              ]
            },
            "description": "Approve KYC verification request (admin only)"
          }
        },
        {
          "name": "Reject KYC",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"Documents are not clearly visible\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/kyc/:id/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "kyc", ":id", "reject"],
              "variable": [
                {
                  "key": "id",
                  "value": "KYC_ID_HERE"
                }
              ]
            },
            "description": "Reject KYC verification request with reason (admin only)"
          }
        }
      ]
    },
    {
      "name": "Books - Author Operations",
      "description": "Book operations for authors",
      "item": [
        {
          "name": "Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"My Test Book\",\n    \"description\": \"This is a test book description\",\n    \"price\": 299,\n    \"authorCopyPrice\": 150,\n    \"genre\": \"Fiction\",\n    \"pageCount\": 250,\n    \"publicationDate\": \"2023-01-15\",\n    \"isbn\": \"978-1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/books",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books"]
            },
            "description": "Create a new book as an author"
          }
        },
        {
          "name": "Get My Books",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/books",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books"]
            },
            "description": "Get all books created by the authenticated author"
          }
        },
        {
          "name": "Get Book by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/books/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "BOOK_ID_HERE"
                }
              ]
            },
            "description": "Get specific book by ID"
          }
        },
        {
          "name": "Update Book",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Book Title\",\n    \"description\": \"Updated book description\",\n    \"price\": 349,\n    \"genre\": \"Science Fiction\",\n    \"pageCount\": 300\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/books/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "BOOK_ID_HERE"
                }
              ]
            },
            "description": "Update book details"
          }
        },
        {
          "name": "Delete Book",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/books/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "BOOK_ID_HERE"
                }
              ]
            },
            "description": "Delete a book"
          }
        },
        {
          "name": "Update Author Price",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"price\": 180\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/books/:id/author-price",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books", ":id", "author-price"],
              "variable": [
                {
                  "key": "id",
                  "value": "BOOK_ID_HERE"
                }
              ]
            },
            "description": "Update the author copy price for a book"
          }
        }
      ]
    },
    {
      "name": "Books - Admin Operations",
      "description": "Book operations for admins",
      "item": [
        {
          "name": "Admin Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Admin Created Book\",\n    \"description\": \"This book was created by an admin\",\n    \"price\": 299,\n    \"authorCopyPrice\": 150,\n    \"genre\": \"Fiction\",\n    \"authorId\": \"AUTHOR_ID_HERE\",\n    \"pageCount\": 250,\n    \"publicationDate\": \"2023-01-15\",\n    \"isbn\": \"978-1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/books/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "books", "create"]
            },
            "description": "Create a new book as an admin (for any author)"
          }
        },
        {
          "name": "Get All Books (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/books",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "books"]
            },
            "description": "Get all books in the system (admin only)"
          }
        },
        {
          "name": "Update Book Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"Published\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/books/:id/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "books", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "BOOK_ID_HERE"
                }
              ]
            },
            "description": "Update book publication status (admin only)"
          }
        }
      ]
    },
    {
      "name": "Notifications - Author Operations",
      "description": "Notification operations for authors",
      "item": [
        {
          "name": "Get My Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications"]
            },
            "description": "Get all notifications for the authenticated user"
          }
        },
        {
          "name": "Get Filtered Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/filtered?type=payout&read=false&page=1&limit=20&search=royalty",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", "filtered"],
              "query": [
                {
                  "key": "type",
                  "value": "payout",
                  "description": "Filter by notification type (payout, admin, system, kyc, order, author, other, all)"
                },
                {
                  "key": "read",
                  "value": "false",
                  "description": "Filter by read status (true/false)"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of items per page"
                },
                {
                  "key": "search",
                  "value": "royalty",
                  "description": "Search term for notification content"
                }
              ]
            },
            "description": "Get filtered notifications with pagination"
          }
        },
        {
          "name": "Get Unread Count",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/unread-count",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", "unread-count"]
            },
            "description": "Get count of unread notifications"
          }
        }
      ]
    },
    {
      "name": "Notifications - Admin Operations",
      "description": "Notification operations for admins",
      "item": [
        {
          "name": "Send Admin Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authorId\": \"AUTHOR_ID_HERE\",\n    \"title\": \"Important Update\",\n    \"message\": \"Your royalty payment has been processed\",\n    \"type\": \"payout\",\n    \"data\": {\n        \"payoutId\": \"PAYOUT_ID_HERE\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/notifications/admin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", "admin"]
            },
            "description": "Send notification to a specific author (admin only)"
          }
        },
        {
          "name": "Send Bulk Notifications",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"recipients\": [\"AUTHOR_ID_1\", \"AUTHOR_ID_2\", \"AUTHOR_ID_3\"],\n    \"title\": \"System Maintenance\",\n    \"message\": \"The system will be under maintenance from 2AM to 4AM tomorrow\",\n    \"type\": \"system\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/notifications/bulk",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", "bulk"]
            },
            "description": "Send notifications to multiple authors at once (admin only)"
          }
        },
        {
          "name": "Get Admin Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/admin?type=all&read=false&page=1&limit=20&search=",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", "admin"],
              "query": [
                {
                  "key": "type",
                  "value": "all",
                  "description": "Filter by notification type"
                },
                {
                  "key": "read",
                  "value": "false",
                  "description": "Filter by read status"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of items per page"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search term for notification content"
                }
              ]
            },
            "description": "Get admin dashboard notifications with filtering (admin only)"
          }
        }
      ]
    },
    {
      "name": "Notification History",
      "description": "Notification history operations",
      "item": [
        {
          "name": "Get Notification History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/history",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", "history"]
            },
            "description": "Get notification history for the authenticated user"
          }
        },
        {
          "name": "Mark As Read",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/:id/read",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", ":id", "read"],
              "variable": [
                {
                  "key": "id",
                  "value": "NOTIFICATION_ID_HERE"
                }
              ]
            },
            "description": "Mark a notification as read"
          }
        }
      ]
    },
    {
      "name": "Orders - Author Operations",
      "description": "Order operations for authors",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"book\": \"BOOK_ID_HERE\",\n    \"quantity\": 10,\n    \"shippingAddress\": {\n        \"addressLine1\": \"123 Main St\",\n        \"addressLine2\": \"Apt 4B\",\n        \"city\": \"Mumbai\",\n        \"state\": \"Maharashtra\",\n        \"postalCode\": \"400001\",\n        \"country\": \"India\"\n    },\n    \"paymentMethod\": \"razorpay\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            },
            "description": "Create a new order as an author"
          }
        },
        {
          "name": "Get My Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/my-orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "my-orders"]
            },
            "description": "Get all orders placed by the authenticated author"
          }
        },
        {
          "name": "Verify Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"orderId\": \"ORDER_ID_HERE\",\n    \"paymentId\": \"RAZORPAY_PAYMENT_ID\",\n    \"signature\": \"RAZORPAY_SIGNATURE\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders/verify-payment",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "verify-payment"]
            },
            "description": "Verify Razorpay payment after completion"
          }
        }
      ]
    },
    {
      "name": "Orders - Admin Operations",
      "description": "Order operations for admins",
      "item": [
        {
          "name": "Get All Orders (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/admin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "admin"]
            },
            "description": "Get all orders in the system (admin only)"
          }
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"Shipped\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders/:id/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "ORDER_ID_HERE"
                }
              ]
            },
            "description": "Update order status (admin only)"
          }
        },
        {
          "name": "Razorpay Webhook (Server to Server)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-razorpay-signature",
                "value": "WEBHOOK_SIGNATURE_HERE"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"payload\": {\n        \"payment\": {\n            \"entity\": {\n                \"id\": \"pay_123456789\",\n                \"order_id\": \"order_123456789\",\n                \"amount\": 5000,\n                \"currency\": \"INR\",\n                \"status\": \"captured\"\n            }\n        },\n        \"event\": \"payment.captured\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders/razorpay-webhook",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "razorpay-webhook"]
            },
            "description": "Webhook endpoint for Razorpay payment notifications"
          }
        }
      ]
    },
    {
      "name": "Print Logs",
      "description": "Print log operations for admins",
      "item": [
        {
          "name": "Get Print Logs (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/print-logs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "print-logs"]
            },
            "description": "Get all print logs (admin only)"
          }
        }
      ]
    },
    {
      "name": "Royalties",
      "description": "Royalty management operations",
      "item": [
        {
          "name": "Get Payouts History (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/payouts/history",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "payouts", "history"]
            },
            "description": "Get all royalty payout history (admin only)"
          }
        },
        {
          "name": "Approve Royalty Payout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/royalties/:id/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "royalties", ":id", "approve"],
              "variable": [
                {
                  "key": "id",
                  "value": "ROYALTY_ID_HERE"
                }
              ]
            },
            "description": "Approve a royalty payout request (admin only)"
          }
        },
        {
          "name": "Reject Royalty Payout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rejectionReason\": \"Bank account information invalid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/royalties/:id/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "royalties", ":id", "reject"],
              "variable": [
                {
                  "key": "id",
                  "value": "ROYALTY_ID_HERE"
                }
              ]
            },
            "description": "Reject a royalty payout request (admin only)"
          }
        }
      ]
    },
    {
      "name": "Fake Purchases (Admin)",
      "description": "Fake purchase operations for admin",
      "item": [
        {
          "name": "Get All Fake Purchases",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/fake-purchases",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "fake-purchases"]
            },
            "description": "Get all fake purchases (admin only)"
          }
        },
        {
          "name": "Get Fake Purchase by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/fake-purchases/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "fake-purchases", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "FAKE_PURCHASE_ID_HERE"
                }
              ]
            },
            "description": "Get a specific fake purchase by ID (admin only)"
          }
        },
        {
          "name": "Create Fake Purchase",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"authorId\": \"AUTHOR_ID_HERE\",\n    \"bookId\": \"BOOK_ID_HERE\",\n    \"quantity\": 10,\n    \"purchaseDate\": \"2023-04-01T12:00:00Z\",\n    \"notes\": \"Bulk purchase for library\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/fake-purchases",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "fake-purchases"]
            },
            "description": "Create a new fake purchase record (admin only)"
          }
        },
        {
          "name": "Update Fake Purchase",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"quantity\": 15,\n    \"notes\": \"Updated bulk purchase for library\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/fake-purchases/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "fake-purchases", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "FAKE_PURCHASE_ID_HERE"
                }
              ]
            },
            "description": "Update an existing fake purchase record (admin only)"
          }
        },
        {
          "name": "Delete Fake Purchase",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/fake-purchases/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "fake-purchases", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "FAKE_PURCHASE_ID_HERE"
                }
              ]
            },
            "description": "Delete a fake purchase record (admin only)"
          }
        }
      ]
    }
  ]
}
