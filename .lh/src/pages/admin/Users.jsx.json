{
    "sourceFile": "src/pages/admin/Users.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1741471998425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741472051290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,1 @@\n-import { useState, useEffect } from 'react';\n-import { DataGrid } from '@mui/x-data-grid';\n-import api from '../../api/base';\n-import UserEditModal from '../../components/UserEditModal';\n-\n-const Users = () => {\n-  const [users, setUsers] = useState([]);\n-  const [selectedUser, setSelectedUser] = useState(null);\n-\n-  const columns = [\n-    { field: 'id', headerName: 'ID', width: 70 },\n-    { field: 'email', headerName: 'Email', width: 200 },\n-    { field: 'role', headerName: 'Role', width: 130 },\n-    { field: 'kycStatus', headerName: 'KYC Status', width: 130 },\n-    // Add more columns as needed\n-  ];\n-\n-  useEffect(() => {\n-    const fetchUsers = async () => {\n-      try {\n-        const response = await api.get('/api/admin/users');\n-        setUsers(response.data);\n-      } catch (error) {\n-        console.error('Error fetching users:', error);\n-      }\n-    };\n-    fetchUsers();\n-  }, []);\n-\n-  return (\n-    <div style={{ height: 600, width: '100%' }}>\n-      <DataGrid\n-        rows={users}\n-        columns={columns}\n-        pageSize={10}\n-        rowsPerPageOptions={[10]}\n-        onRowClick={(params) => setSelectedUser(params.row)}\n-      />\n-      \n-      <UserEditModal\n-        open={!!selectedUser}\n-        user={selectedUser}\n-        onClose={() => setSelectedUser(null)}\n-        onSave={async (updatedUser) => {\n-          await api.put(`/api/admin/users/${updatedUser.id}`, updatedUser);\n-          setUsers(users.map(u => u.id === updatedUser.id ? updatedUser : u));\n-        }}\n-      />\n-    </div>\n-  );\n-};\n-\n-export default Users; \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1741471998425,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport api from '../../api/base';\nimport UserEditModal from '../../components/UserEditModal';\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'email', headerName: 'Email', width: 200 },\n    { field: 'role', headerName: 'Role', width: 130 },\n    { field: 'kycStatus', headerName: 'KYC Status', width: 130 },\n    // Add more columns as needed\n  ];\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await api.get('/api/admin/users');\n        setUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  return (\n    <div style={{ height: 600, width: '100%' }}>\n      <DataGrid\n        rows={users}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        onRowClick={(params) => setSelectedUser(params.row)}\n      />\n      \n      <UserEditModal\n        open={!!selectedUser}\n        user={selectedUser}\n        onClose={() => setSelectedUser(null)}\n        onSave={async (updatedUser) => {\n          await api.put(`/api/admin/users/${updatedUser.id}`, updatedUser);\n          setUsers(users.map(u => u.id === updatedUser.id ? updatedUser : u));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Users; "
        }
    ]
}