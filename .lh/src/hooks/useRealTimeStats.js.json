{
    "sourceFile": "src/hooks/useRealTimeStats.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1741472001370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741472051304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,1 @@\n-import { useState, useEffect } from 'react';\n-import api from '../api/base';\n-\n-export default function useRealTimeStats() {\n-  const [stats, setStats] = useState({\n-    totalUsers: 0,\n-    activeOrders: 0,\n-    pendingKyc: 0,\n-    totalRoyalties: 0\n-  });\n-\n-  useEffect(() => {\n-    const fetchStats = async () => {\n-      try {\n-        const [usersRes, ordersRes, kycRes] = await Promise.all([\n-          api.get('/api/admin/users/count'),\n-          api.get('/api/admin/orders/stats'),\n-          api.get('/api/admin/kyc/pending-count')\n-        ]);\n-        \n-        setStats({\n-          totalUsers: usersRes.data.count,\n-          activeOrders: ordersRes.data.active,\n-          pendingKyc: kycRes.data.count,\n-          totalRoyalties: ordersRes.data.royalties\n-        });\n-      } catch (error) {\n-        console.error('Error fetching stats:', error);\n-      }\n-    };\n-\n-    fetchStats();\n-    const interval = setInterval(fetchStats, 30000);\n-    return () => clearInterval(interval);\n-  }, []);\n-\n-  return stats;\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1741472001370,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from 'react';\nimport api from '../api/base';\n\nexport default function useRealTimeStats() {\n  const [stats, setStats] = useState({\n    totalUsers: 0,\n    activeOrders: 0,\n    pendingKyc: 0,\n    totalRoyalties: 0\n  });\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const [usersRes, ordersRes, kycRes] = await Promise.all([\n          api.get('/api/admin/users/count'),\n          api.get('/api/admin/orders/stats'),\n          api.get('/api/admin/kyc/pending-count')\n        ]);\n        \n        setStats({\n          totalUsers: usersRes.data.count,\n          activeOrders: ordersRes.data.active,\n          pendingKyc: kycRes.data.count,\n          totalRoyalties: ordersRes.data.royalties\n        });\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n      }\n    };\n\n    fetchStats();\n    const interval = setInterval(fetchStats, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return stats;\n} "
        }
    ]
}