{
    "sourceFile": "src/ErrorBoundary.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1741665218678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741665543991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,1 @@\n-import React from 'react';\n-\n-class ErrorBoundary extends React.Component {\n-  constructor(props) {\n-    super(props);\n-    this.state = { hasError: false };\n-  }\n-\n-  static getDerivedStateFromError(error) {\n-    return { hasError: true };\n-  }\n-\n-  componentDidCatch(error, errorInfo) {\n-    console.error('Error Boundary:', error, errorInfo);\n-  }\n-\n-  render() {\n-    if (this.state.hasError) {\n-      return <div className=\"error-fallback\">Something went wrong. Please try again.</div>;\n-    }\n-    return this.props.children;\n-  }\n-}\n-\n-export default ErrorBoundary; \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1741665218678,
            "name": "Commit-0",
            "content": "import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error Boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <div className=\"error-fallback\">Something went wrong. Please try again.</div>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary; "
        }
    ]
}