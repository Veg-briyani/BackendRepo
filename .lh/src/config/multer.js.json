{
    "sourceFile": "src/config/multer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1741454155804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741454178693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,29 +27,5 @@\n   limits: { fileSize: 5 * 1024 * 1024 }, // 5MB\n   fileFilter: fileFilter\n });\n \n-// Add profile photo storage configuration\n-const profileStorage = multer.diskStorage({\n-  destination: (req, file, cb) => {\n-    const destPath = 'public/profile-photos/';\n-    fs.mkdirSync(destPath, { recursive: true });\n-    cb(null, destPath);\n-  },\n-  filename: (req, file, cb) => {\n-    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n-    cb(null, `profile-${uniqueSuffix}${path.extname(file.originalname)}`);\n-  }\n-});\n-\n-// Create separate upload instance for profile photos\n-const uploadProfile = multer({ \n-  storage: profileStorage,\n-  limits: { fileSize: 5 * 1024 * 1024 },\n-  fileFilter: fileFilter\n-});\n-\n-// Update exports\n-module.exports = {\n-  upload,\n-  uploadProfile\n-}; \n\\ No newline at end of file\n+module.exports = upload; \n\\ No newline at end of file\n"
                }
            ],
            "date": 1741454155804,
            "name": "Commit-0",
            "content": "const multer = require('multer');\nconst path = require('path');\nconst fs = require('fs');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    const destPath = 'public/book-covers/';\n    require('fs').mkdirSync(destPath, { recursive: true });\n    cb(null, destPath);\n  },\n  filename: (req, file, cb) => {\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    cb(null, `cover-${uniqueSuffix}${path.extname(file.originalname)}`);\n  }\n});\n\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype.startsWith('image/')) {\n    cb(null, true);\n  } else {\n    cb(new Error('Only image files are allowed!'), false);\n  }\n};\n\nconst upload = multer({ \n  storage: storage,\n  limits: { fileSize: 5 * 1024 * 1024 }, // 5MB\n  fileFilter: fileFilter\n});\n\n// Add profile photo storage configuration\nconst profileStorage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    const destPath = 'public/profile-photos/';\n    fs.mkdirSync(destPath, { recursive: true });\n    cb(null, destPath);\n  },\n  filename: (req, file, cb) => {\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    cb(null, `profile-${uniqueSuffix}${path.extname(file.originalname)}`);\n  }\n});\n\n// Create separate upload instance for profile photos\nconst uploadProfile = multer({ \n  storage: profileStorage,\n  limits: { fileSize: 5 * 1024 * 1024 },\n  fileFilter: fileFilter\n});\n\n// Update exports\nmodule.exports = {\n  upload,\n  uploadProfile\n}; "
        }
    ]
}