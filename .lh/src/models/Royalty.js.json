{
    "sourceFile": "src/models/Royalty.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1741464622150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741464630934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+const mongoose = require('mongoose');\n+\n+const royaltySchema = new mongoose.Schema({\n+  authorId: {\n+    type: mongoose.Schema.Types.ObjectId,\n+    ref: 'User',\n+    required: true\n+  },\n+  bookId: {\n+    type: mongoose.Schema.Types.ObjectId,\n+    ref: 'Book'\n+  },\n+  amount: {\n+    type: Number,\n+    required: true,\n+    min: 0\n+  },\n+  paymentMethod: {\n+    type: String,\n+    enum: ['bank_transfer', 'upi', 'paypal'],\n+    required: true\n+  },\n+  status: {\n+    type: String,\n+    enum: ['Pending', 'Approved', 'Paid', 'Failed'],\n+    default: 'Pending'\n+  },\n+  transactionId: String,\n+  paymentDate: Date,\n+  payoutDate: Date,\n+  previousBalance: Number,\n+  newBalance: Number\n+}, {\n+  timestamps: true\n+});\n+\n+module.exports = mongoose.model('Royalty', royaltySchema); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741465030152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n   transactionId: String,\n   paymentDate: Date,\n   payoutDate: Date,\n   previousBalance: Number,\n-  newBalance: Number\n+  newBalance: Number,\n+  rejectionReason: String\n }, {\n   timestamps: true\n });\n \n"
                },
                {
                    "date": 1741465068198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,42 +34,5 @@\n }, {\n   timestamps: true\n });\n \n-module.exports = mongoose.model('Royalty', royaltySchema); \n-const mongoose = require('mongoose');\n-\n-const royaltySchema = new mongoose.Schema({\n-  authorId: {\n-    type: mongoose.Schema.Types.ObjectId,\n-    ref: 'User',\n-    required: true\n-  },\n-  bookId: {\n-    type: mongoose.Schema.Types.ObjectId,\n-    ref: 'Book'\n-  },\n-  amount: {\n-    type: Number,\n-    required: true,\n-    min: 0\n-  },\n-  paymentMethod: {\n-    type: String,\n-    enum: ['bank_transfer', 'upi', 'paypal'],\n-    required: true\n-  },\n-  status: {\n-    type: String,\n-    enum: ['Pending', 'Approved', 'Paid', 'Failed'],\n-    default: 'Pending'\n-  },\n-  transactionId: String,\n-  paymentDate: Date,\n-  payoutDate: Date,\n-  previousBalance: Number,\n-  newBalance: Number\n-}, {\n-  timestamps: true\n-});\n-\n module.exports = mongoose.model('Royalty', royaltySchema); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741465098754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     required: true\n   },\n   status: {\n     type: String,\n-    enum: ['Pending', 'Approved', 'Paid', 'Failed'],\n+    enum: ['Pending', 'Approved', 'Rejected', 'Paid', 'Failed'],\n     default: 'Pending'\n   },\n   transactionId: String,\n   paymentDate: Date,\n"
                }
            ],
            "date": 1741464622150,
            "name": "Commit-0",
            "content": "const mongoose = require('mongoose');\n\nconst royaltySchema = new mongoose.Schema({\n  authorId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  bookId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Book'\n  },\n  amount: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  paymentMethod: {\n    type: String,\n    enum: ['bank_transfer', 'upi', 'paypal'],\n    required: true\n  },\n  status: {\n    type: String,\n    enum: ['Pending', 'Approved', 'Paid', 'Failed'],\n    default: 'Pending'\n  },\n  transactionId: String,\n  paymentDate: Date,\n  payoutDate: Date,\n  previousBalance: Number,\n  newBalance: Number\n}, {\n  timestamps: true\n});\n\nmodule.exports = mongoose.model('Royalty', royaltySchema); "
        }
    ]
}